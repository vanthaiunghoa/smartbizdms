//    SmartBiz POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 SmartBiz, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of SmartBiz POS.
//
//    SmartBiz POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    SmartBiz POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with SmartBiz POS.  If not, see <http://www.gnu.org/licenses/>.

report = new vn.smartbiz.pos.reports.PanelReportBean();

report.setTitleKey("Menu.CustomerSells");
report.setReport("/vn/smartbiz/reports/salebycustomer");
report.setResourceBundle("vn/smartbiz/reports/salebycustomer_messages");

                report.setSentence("SELECT " +
                "CUSTOMERS.NAME AS CNAME, " +
                "RECEIPTS.DATENEW, " +
                "TICKETS.TICKETID, " +
                "PRODUCTS.NAME AS PNAME, " +                
                "TICKETS.TICKETTYPE, " +
                "SUM(TICKETLINES.UNITS) AS UNITS, " +
                "SUM((CASE WHEN TICKETLINES.DISCOUNTTYPE=0 THEN TICKETLINES.PRICE*(1-TICKETLINES.DISCOUNT/100) ELSE TICKETLINES.PRICE-TICKETLINES.DISCOUNT END)*TICKETLINES.UNITS*(1-TICKETS.DISCOUNT/100)*(1+TAXES.RATE))*(1+(CASE WHEN TICKETTAXES.RATE IS NULL THEN 0 ELSE TICKETTAXES.RATE END)) AS TOTAL  " +
                "FROM TICKETLINES LEFT JOIN PRODUCTS ON TICKETLINES.PRODUCT = PRODUCTS.ID  " +
                "LEFT JOIN TICKETS ON TICKETS.ID = TICKETLINES.TICKET  " +
                "LEFT JOIN RECEIPTS ON RECEIPTS.ID = TICKETS.ID  " +
                "LEFT JOIN CUSTOMERS ON CUSTOMERS.ID = TICKETS.CUSTOMER  " +
                "LEFT JOIN TAXES ON TAXES.ID = TICKETLINES.TAXID  " +
                "LEFT JOIN TAXES TICKETTAXES ON TICKETTAXES.ID=TICKETS.TAXID  " +                                                                                      
                "WHERE TICKETS.TICKETTYPE < 3 AND ?(QBF_FILTER) " +
                "GROUP BY CUSTOMERS.NAME, RECEIPTS.DATENEW, TICKETS.TICKETID, PRODUCTS.NAME, TICKETS.TICKETTYPE " +
                "ORDER BY CUSTOMERS.NAME, PRODUCTS.NAME, RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");
report.addQBFFilter(new vn.smartbiz.pos.reports.JParamsDatesInterval());
report.addParameter("CUSTOMERS.ID");
report.addParameter("CUSTOMERS.NAME");
report.addQBFFilter(new vn.smartbiz.pos.reports.JParamsCustomer());

report.addField("CNAME", vn.smartbiz.data.loader.Datas.STRING);
report.addField("DATENEW", vn.smartbiz.data.loader.Datas.TIMESTAMP);
report.addField("TICKETID", vn.smartbiz.data.loader.Datas.STRING);
report.addField("PNAME", vn.smartbiz.data.loader.Datas.STRING);
report.addField("TICKETTYPE", vn.smartbiz.data.loader.Datas.INT);
report.addField("UNITS", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("TOTAL", vn.smartbiz.data.loader.Datas.DOUBLE);

report;

