report = new vn.smartbiz.pos.reports.PanelReportBean();

report.setTitleKey("Menu.InventorySerial");
report.setReport("/vn/smartbiz/reports/inventoryserial");
report.setResourceBundle("vn/smartbiz/reports/inventoryserial_messages");

report.setSentence("SELECT DISTINCT " +
                "STOCKCURRENT.LOCATION AS LOCATIONID, " +                
                "LOCATIONS.NAME AS LOCATIONNAME, " +
                "(select SUM(STOCKCURRENT.UNITS) from stockcurrent where STOCKCURRENT.LOCATION = LOCATIONID GROUP BY LOCATIONID) AS STOCKUNITS, " +
                "PRODUCTS.REFERENCE, " +
                "PRODUCTS.NAME AS PRODUCTNAME, " +
                "PRODUCTS.CATEGORY, " +
                "CATEGORIES.NAME AS CATEGORYNAME, " +
                "(select SUM(STOCKCURRENT.UNITS) from stockcurrent, products where STOCKCURRENT.LOCATION = LOCATIONID AND stockcurrent.PRODUCt=products.id and products.category = categories.id group by LOCATIONID, categoryname) as CATEGORYUNITS, " +
                "SUM(STOCKCURRENT.UNITS) AS UNITS, " +               
		"COALESCE(PRODUCTS.STOCKVOLUME, 0) AS STOCKVOLUME, " +
                "COALESCE(PRODUCTS.STOCKCOST, 0) AS STOCKCOST, " +
                "COALESCE(STOCKLEVEL.STOCKSECURITY, 0) AS STOCKSECURITY, " +
                "COALESCE(STOCKLEVEL.STOCKMAXIMUM, 0) AS STOCKMAXIMUM, " +
		"PRODUCTINSTANCE.IMEI AS SERIAL, " +
		"PRODUCTINSTANCE.PRICEBUY AS PRICEBUY, " +
                "PRODUCTINSTANCE.PRICESELL AS PRICESELL, " +
		"PRODUCTINSTANCE.STOCKDATE AS STOCKDATE, " +
		"PRODUCTINSTANCE.WARRANTYPERIOD AS WARRANTYPERIOD, " +
                "STOCKDIARY.REASON AS REASON, " +
                "((CASE WHEN TICKETLINES.DISCOUNTTYPE=0 THEN TICKETLINES.PRICE*(1-TICKETLINES.DISCOUNT/100) ELSE TICKETLINES.PRICE-TICKETLINES.DISCOUNT END)*(1-TICKETS.DISCOUNT/100)*(1+TAXES.RATE))AS TICKETLINES_PRICE " +
                "FROM TAXES, STOCKDIARY, TICKETS, TICKETLINES, STOCKCURRENT " +
		"JOIN PRODUCTINSTANCE ON STOCKCURRENT.PRODUCT = PRODUCTINSTANCE.PRODUCT_ID " +
                "JOIN LOCATIONS ON STOCKCURRENT.LOCATION = LOCATIONS.ID " +
                "JOIN PRODUCTS ON STOCKCURRENT.PRODUCT = PRODUCTS.ID " +
                "JOIN CATEGORIES ON PRODUCTS.CATEGORY = CATEGORIES.ID " +               
		"LEFT OUTER JOIN STOCKLEVEL ON STOCKCURRENT.LOCATION = STOCKLEVEL.LOCATION AND STOCKCURRENT.PRODUCT = STOCKLEVEL.PRODUCT " + 
                "WHERE ?(QBF_FILTER) AND PRODUCTINSTANCE.STATUS > 0 AND PRODUCTS.ID=PRODUCTINSTANCE.PRODUCT_ID " +
                "AND TICKETLINES.TAXID = TAXES.ID and TICKETS.ID=TICKETLINES.TICKET AND STOCKDIARY.TICKET=TICKETLINES.TICKET AND TICKETLINES.PRODUCT = STOCKDIARY.PRODUCT AND TICKETLINES.LINE=STOCKDIARY.LINE AND PRODUCTINSTANCE.PRODUCT_ID=STOCKDIARY.PRODUCT AND PRODUCTS.ID = STOCKDIARY.PRODUCT AND STOCKDIARY.LOCATION = LOCATIONS.ID AND FIND_IN_SET(PRODUCTINSTANCE.IMEI,TICKETLINES.SERIALNUMBERS) > 0 " +
                "GROUP BY STOCKCURRENT.LOCATION, LOCATIONS.NAME, PRODUCTS.REFERENCE, PRODUCTS.NAME, PRODUCTS.CATEGORY, CATEGORIES.NAME, PRODUCTS.STOCKVOLUME, PRODUCTS.STOCKCOST, STOCKLEVEL.STOCKSECURITY, STOCKLEVEL.STOCKMAXIMUM, PRODUCTINSTANCE.IMEI, PRODUCTINSTANCE.PRICEBUY, PRODUCTINSTANCE.PRICESELL, PRODUCTINSTANCE.STOCKDATE, PRODUCTINSTANCE.WARRANTYPERIOD   " +
                "ORDER BY STOCKCURRENT.LOCATION, CATEGORIES.NAME, PRODUCTS.NAME, PRODUCTINSTANCE.IMEI");
report.addParameter("PRODUCTS.NAME");
report.addParameter("PRODUCTS.PRICEBUY");
report.addParameter("PRODUCTS.PRICESELL");
report.addParameter("PRODUCTS.CATEGORY");
report.addParameter("PRODUCTS.CODE");
report.addQBFFilter(new vn.smartbiz.pos.ticket.ProductFilter());
report.addParameter("STOCKCURRENT.LOCATION");
report.addQBFFilter(new vn.smartbiz.pos.reports.JParamsLocationWithFirst());

report.addField("LOCATIONID", vn.smartbiz.data.loader.Datas.STRING);
report.addField("LOCATIONNAME", vn.smartbiz.data.loader.Datas.STRING);
report.addField("STOCKUNITS", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("REFERENCE", vn.smartbiz.data.loader.Datas.STRING);
report.addField("NAME", vn.smartbiz.data.loader.Datas.STRING);
report.addField("CATEGORY", vn.smartbiz.data.loader.Datas.STRING);
report.addField("CATEGORYNAME", vn.smartbiz.data.loader.Datas.STRING);
report.addField("CATEGORYUNITS", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("UNITS", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("STOCKVOLUME", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("STOCKCOST", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("STOCKSECURITY", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("STOCKMAXIMUM", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("SERIAL", vn.smartbiz.data.loader.Datas.STRING);
report.addField("PRICEBUY", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("PRICESELL", vn.smartbiz.data.loader.Datas.DOUBLE);
report.addField("STOCKDATE", vn.smartbiz.data.loader.Datas.TIMESTAMP);
report.addField("WARRANTYPERIOD", vn.smartbiz.data.loader.Datas.INT);
report.addField("REASON", vn.smartbiz.data.loader.Datas.INT);
report.addField("TICKETLINES_PRICE", vn.smartbiz.data.loader.Datas.DOUBLE);
report;
