<?php
class ControllerSmartBizDownload extends SmartBizController {	public function index() {		$this->updateStatusMenuNavigation('download');		$this->load->model('smartbiz/solution');		$this->load->model('smartbiz/solution_detail');		$this->load->model('smartbiz/download');		$this->load->model('smartbiz/download_category');		$solutions = $this->model_smartbiz_solution->getAll();		foreach($solutions as &$solution) {			$names = explode(' ',$solution['name']);			$temp = array();			foreach($names as $key=>$name) {				$name = trim($name);				if(!empty($name) && $name != '-') {					$temp[$key] = $name;				}			}			$solution['searchengine'] = mb_strtolower(implode('-',$temp),'UTF-8');		}		$this->data['solutions'] = $solutions;		$this->data['download_categories'] = $this->model_smartbiz_download_category->getAll();		$this->data['downloads'] = $this->model_smartbiz_download->getAllDownloads();		$this->data['images'] = $this->model_smartbiz_download->getDownloadImages(0);		$uri = $_SERVER['REQUEST_URI'];		$elements = explode('/',$uri);		$params = array();		foreach($elements as $ele) {			if(strpos($ele,':') !== false) {				$arr = explode(':',$ele);				$params[$arr[0]] = $arr[1];				$this->data[$arr[0]] = $arr[1];			}		}		if(!isset($params['id'])) {			$parent = $this->model_smartbiz_solution->getFirstId();			$params['id'] = $parent['solution_id'];			$this->data['id'] = $parent['solution_id'];		}		$solutionDataObj = $this->model_smartbiz_solution->getById($params['id']);		foreach($solutionDataObj as $key=>&$solution) {			if($key == 'price') $solution = (int)$solution;			if($key == 'special_price') $solution = (int)$solution;		}		$this->data['solutionDataObj'] = $solutionDataObj;		$solutionDetailDataObjs = $this->model_smartbiz_solution_detail->getByParentId($params['id']);		$this->data['solutionDetailDataObjs'] = $solutionDetailDataObjs;		$product_type = array(			'smartbiz-suite' => '',			'point-of-sales-pos' => '',			'enterprise-resource-planning-erp' => '',			'business-intelligence-bi' => '',			'human-resource-hrm' => '',			'ecommerce' => '',			'customer-relationship' => '',			'distribution-management-system-dms'=>'',		);		$keys = array_keys($product_type);		foreach($keys as $key) {			$product_display[$key] = 'display:none;';			$product_selectLava[$key] = '';			$product_scrollpane[$key] = '';		}		$spans = array(			'Smart',			'Point',			'Enter',			'Content',			'Business',			'Human',			'Commerce',			'Customer',		);		$listMenu = array(			'smartbiz-suite' => array(									'Distribution',									'Retail',									'Manufactoring',									'SmartbizFashion',		),			'point-of-sales-pos' => array(									'Sales',									'Purchase',									'Warehouse',									'Receivable',									'Finance',									'Project',									'Manufactoring',									'Core',									'Information',		),			'enterprise-resource-planning-erp' => array(									'Benefit',									'Sales',									'Purchase',									'Warehouse',									'Receivable',		),			'business-intelligence-bi' => array(									'Benefit',									'Flower',									'Mobile',									'Electric',									'Fashion',									'Food',									'Clients',		),			'human-resource-hrm' => array(									'Performance',									'Analysis',									'Report',									'Etl',		),			'ecommerce' => array(									'Time',									'Leave',									'Benefit',									'Pim',									'Ess',									'Admin',									'Performance',		),			'customer-relationship' => array(									'Ecommerce',									'Workflow',									'Marketing',									'Payment',									'Social',									'InternetMarketing',		),			'distribution-management-system-dms' => array(									'Marketing',									'Sales',									'CustomerSupport',		),		);		if (isset($this->request->get['product_type'])) {			$product_type[$this->request->get['product_type']] = 'SubMenuPagesCur';			$product_display[$this->request->get['product_type']] = 'display:block;';			$product_selectLava[$this->request->get['product_type']] = 'selectedLava';			$product_scrollpane[$this->request->get['product_type']] = 'scroll-pane';			$this->data['js_binding_tab_click'] = 'bindingTabClick("' . $this->request->get['product_type'] . '", true);';		} else {			$product_type[$keys[0]] = 'SubMenuPagesCur';			$product_display[$keys[0]] = 'display:block;';			$product_selectLava[$keys[0]] = 'selectedLava';			$product_scrollpane[$keys[0]] = 'scroll-pane';			$this->data['js_binding_tab_click'] = 'bindingTabClick("smartbiz-suite", true);';		}		$this->data['page_title'] = "Tải về các video và hình ảnh của các phần mềm giải pháp | SmartBiz";		$this->data['page_description'] = "SmartBiz cung cấp hình thức hướng dẫn sử dụng bằng video";		$this->data['link_product_detail'] = $this->getDetailPage();		// Assign to template		$this->data['product_type'] = $product_type;		$this->data['product_display'] = $product_display;		$this->data['spans'] = $spans;		$this->data['keys'] = $keys;		$this->data['cur_key'] = isset($this->request->get['product_type'])?$this->request->get['product_type']:$keys[0];		$this->data['listMenu'] = $listMenu;		$this->data['product_selectLava'] = $product_selectLava;		$this->data['product_scrollpane'] = $product_scrollpane;		$this->display('/template/common/download.tpl');	}	public function download() {		$uri = $_SERVER['REQUEST_URI'];		$elements = explode('/',$uri);		$params = array();		foreach($elements as $ele) {			if(strpos($ele,':') !== false) {				$arr = explode(':',$ele);				$params[$arr[0]] = $arr[1];			}		}		$download_info = $this->model_smartbiz_download->getById($params['id']);		if ($download_info) {			$file = DIR_DOWNLOAD . $download_info['filename'];			$mask = basename($download_info['mask']);			$mime = 'application/octet-stream';			$encoding = 'binary';			if (!headers_sent()) {				if (file_exists($file)) {					header('Pragma: public');					header('Expires: 0');					header('Content-Description: File Transfer');					header('Content-Type: ' . $mime);					header('Content-Transfer-Encoding: ' . $encoding);					header('Content-Disposition: attachment; filename=' . ($mask ? $mask : basename($file)));					header('Content-Length: ' . filesize($file));					$file = readfile($file, 'rb');					print($file);				} else {					exit('Error: Could not find file ' . $file . '!');				}			} else {				exit('Error: Headers already sent out!');			}			$this->model_account_download->updateRemaining($this->request->get['order_download_id']);		} else {			$this->redirect(HTTPS_SERVER . 'index.php?route=account/download');		}	}}?>